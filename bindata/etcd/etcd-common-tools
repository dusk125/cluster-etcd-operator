# Common environment variables
ASSET_DIR="/home/core/assets"
CONFIG_FILE_DIR="/etc/kubernetes"
MANIFEST_DIR="${CONFIG_FILE_DIR}/manifests"
ETCD_DATA_DIR="/var/lib/etcd"
ETCD_DATA_DIR_BACKUP="/var/lib/etcd-backup"
MANIFEST_STOPPED_DIR="${ASSET_DIR}/manifests-stopped"
RESTORE_ETCD_POD_YAML="${CONFIG_FILE_DIR}/static-pod-resources/etcd-certs/configmaps/restore-etcd-pod/pod.yaml"
ETCDCTL_BIN_DIR="${CONFIG_FILE_DIR}/static-pod-resources/bin"
PATH=${PATH}:${ETCDCTL_BIN_DIR}
export KUBECONFIG="/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/localhost.kubeconfig"
export ETCD_ETCDCTL_BIN="etcdctl"

# download etcdctl from download release image
function dl_etcdctl {
  if [ -x "$(command -v etcdctl)" ]; then
    echo "etcdctl is already installed"
    if [ -x "$(command -v etcdutl)" ]; then
      echo "etcdutl is already installed"
      export ETCD_ETCDUTL_BIN=etcdutl
    fi

    return
  fi

  local etcdimg=${ETCD_IMAGE}
  local etcdctr=$(podman create ${etcdimg} --authfile=/var/lib/kubelet/config.json)
  local etcdmnt=$(podman mount "${etcdctr}")
  [ ! -d ${ETCDCTL_BIN_DIR} ] && mkdir -p ${ETCDCTL_BIN_DIR}
  cp ${etcdmnt}/bin/etcdctl ${ETCDCTL_BIN_DIR}/
  if [ -f "${etcdmnt}/bin/etcdutl" ]; then
    cp ${etcdmnt}/bin/etcdutl ${ETCDCTL_BIN_DIR}/
    export ETCD_ETCDUTL_BIN=etcdutl
  fi

  umount "${etcdmnt}"
  podman rm "${etcdctr}"
  etcdctl version
}

function check_snapshot_status() {
  local snap_file="$1"

  ETCD_CLIENT="${ETCD_ETCDCTL_BIN}"
  if [ -n "${ETCD_ETCDUTL_BIN}" ]; then
    ETCD_CLIENT="${ETCD_ETCDUTL_BIN}"
  fi

  if ! ${ETCD_CLIENT} snapshot status "${snap_file}" -w json; then
    echo "Backup integrity verification failed. Backup appears corrupted. Aborting!"
    return 1
  fi
}

